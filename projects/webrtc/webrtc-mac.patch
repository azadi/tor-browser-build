From 4fa10eadfbd5272a5bd516ce79a5fe57dc9de7fa Mon Sep 17 00:00:00 2001
From: David Fifield <david@bamsoftware.com>
Date: Sat, 24 Mar 2018 19:22:08 -0700
Subject: [PATCH 1/10] Disable assertions that prevent cross-compiling for mac.

---
 config/BUILDCONFIG.gn  | 4 ++--
 toolchain/mac/BUILD.gn | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/build/config/BUILDCONFIG.gn b/build/config/BUILDCONFIG.gn
index 48ed140c..15e06808 100644
--- a/build/config/BUILDCONFIG.gn
+++ b/build/config/BUILDCONFIG.gn
@@ -238,8 +238,8 @@ if (target_os == "android") {
 } else if (target_os == "ios") {
   _default_toolchain = "//build/toolchain/mac:ios_clang_$target_cpu"
 } else if (target_os == "mac") {
-  assert(host_os == "mac", "Mac cross-compiles are unsupported.")
-  _default_toolchain = host_toolchain
+  # assert(host_os == "mac", "Mac cross-compiles are unsupported.")
+  _default_toolchain = "//build/toolchain/mac:clang_$host_cpu"
 } else if (target_os == "win") {
   # On Windows we use the same toolchain for host and target by default.
   # Beware, win cross builds mostly don't work yet, see docs/win_cross.md
diff --git a/build/toolchain/mac/BUILD.gn b/build/toolchain/mac/BUILD.gn
index fc113d6a..7a017170 100644
--- a/build/toolchain/mac/BUILD.gn
+++ b/build/toolchain/mac/BUILD.gn
@@ -14,7 +14,7 @@ if (is_ios) {
 import("//build/config/mac/mac_sdk.gni")
 import("//build/config/mac/symbols.gni")
 
-assert(host_os == "mac")
+# assert(host_os == "mac")
 
 import("//build/toolchain/cc_wrapper.gni")
 import("//build/toolchain/clang_static_analyzer.gni")
-- 
2.11.0


From 7a4ad2b1f1b2acc229f139559706c442e368cc55 Mon Sep 17 00:00:00 2001
From: David Fifield <david@bamsoftware.com>
Date: Sat, 24 Mar 2018 19:27:06 -0700
Subject: [PATCH 2/10] Hardcode cross-compiling flags in config/mac/BUILD.gn.

The build system doesn't provide a general way to set flags externally.
"No way to provide extra CFLAGS/CXXFLAGS/LDFLAGS"
https://bugs.chromium.org/p/chromium/issues/detail?id=595653
---
 config/mac/BUILD.gn | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/build/config/mac/BUILD.gn b/build/config/mac/BUILD.gn
index 4c681e88..a437d2a9 100644
--- a/build/config/mac/BUILD.gn
+++ b/build/config/mac/BUILD.gn
@@ -57,6 +57,11 @@ config("runtime_library") {
     "-isysroot",
     rebase_path(sysroot, root_build_dir),
     "-mmacosx-version-min=$mac_deployment_target",
+    "-target",
+    "x86_64-apple-darwin10",
+    "-mlinker-version=136",
+    "-B",
+    "/var/tmp/dist/macosx-toolchain/cctools/bin",
   ]
 
   asmflags = common_flags
-- 
2.11.0


From fac557511cc777885129eceafe55d5e32b211b39 Mon Sep 17 00:00:00 2001
From: David Fifield <david@bamsoftware.com>
Date: Sat, 24 Mar 2018 19:31:41 -0700
Subject: [PATCH 3/10] Port build/config/mac/plist_util.py to biplist.

So as not to require the plutil command. plutil was only being used to
convert between XML and binary plist formats, because versions of the
plistlib module before Python 3.4 only support the XML format. The
biplist library handles both formats natively.

FAILED: gen/webrtc/examples/AppRTCMobile_info_plist_merged.plist
python ../../build/config/mac/plist_util.py merge -f=xml1 -o=gen/webrtc/examples/AppRTCMobile_info_plist_merged.plist ../../build/config/mac/BuildInfo.plist ../../webrtc/examples/objc/AppRTCMobile/mac/Info.plist
Traceback (most recent call last):
  File "../../build/config/mac/plist_util.py", line 254, in <module>
    sys.exit(Main())
  File "../../build/config/mac/plist_util.py", line 250, in Main
    args.func(args)
  File "../../build/config/mac/plist_util.py", line 207, in _Execute
    data = MergePList(data, LoadPList(filename))
  File "../../build/config/mac/plist_util.py", line 121, in LoadPList
    subprocess.check_call(['plutil', '-convert', 'xml1', '-o', name, path])
  File "/usr/lib/python2.7/subprocess.py", line 535, in check_call
    retcode = call(*popenargs, **kwargs)
  File "/usr/lib/python2.7/subprocess.py", line 522, in call
    return Popen(*popenargs, **kwargs).wait()
  File "/usr/lib/python2.7/subprocess.py", line 710, in __init__
    errread, errwrite)
  File "/usr/lib/python2.7/subprocess.py", line 1335, in _execute_child
    raise child_exception
OSError: [Errno 2] No such file or directory
---
 config/mac/plist_util.py | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/build/config/mac/plist_util.py b/build/config/mac/plist_util.py
index bba0208a..019dcf91 100644
--- a/build/config/mac/plist_util.py
+++ b/build/config/mac/plist_util.py
@@ -3,7 +3,7 @@
 # found in the LICENSE file.
 
 import argparse
-import plistlib
+import biplist
 import os
 import re
 import subprocess
@@ -89,6 +89,7 @@ def Interpolate(value, substitutions):
 
 def LoadPList(path):
   """Loads Plist at |path| and returns it as a dictionary."""
+  return biplist.readPlist(path)
   fd, name = tempfile.mkstemp()
   try:
     subprocess.check_call(['plutil', '-convert', 'xml1', '-o', name, path])
@@ -100,6 +101,7 @@ def LoadPList(path):
 
 def SavePList(path, format, data):
   """Saves |data| as a Plist to |path| in the specified |format|."""
+  return biplist.writePlist(data, path, {"xml1": False, "binary1": True}[format]) # doesn't handle "json" format
   fd, name = tempfile.mkstemp()
   try:
     # "plutil" does not replace the destination file but update it in place,
-- 
2.11.0

From f9eb0392abc33aac757f8c01eeb2eb8f270aa235 Mon Sep 17 00:00:00 2001
From: David Fifield <david@bamsoftware.com>
Date: Sat, 24 Mar 2018 19:34:56 -0700
Subject: [PATCH 4/10] Hack workaround to disable dispatch_queue_get_label.

dispatch_queue_get_label and DISPATCH_CURRENT_QUEUE_LABEL require SDK
10.9+. I don't know if removing this code even makes sense, but it at
least won't crash immediately because of a null pointer.

https://developer.apple.com/documentation/dispatch/dispatch_current_queue_label
https://developer.apple.com/library/content/releasenotes/General/APIDiffsMacOSX10_9/General.html

FAILED: obj/webrtc/base/rtc_task_queue/sequenced_task_checker_impl.o ../../../../clang/bin/clang++ -MMD -MF obj/webrtc/base/rtc_task_queue/sequenced_task_checker_impl.o.d -DV8_DEPRECATION_WARNINGS -DNO_TCMALLOC -DUSE_EXTERNAL_POPUP_MENU=1 -DFULL_SAFE_BROWSING -DSAFE_BROWSING_CSD -DSAFE_BROWSING_DB_LOCAL -DCHROMIUM_BUILD -DENABLE_MEDIA_ROUTER=1 -DFIELDTRIAL_TESTING_ENABLED -DCR_XCODE_VERSION=0730 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D_FORTIFY_SOURCE=2 -D__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORE=0 -DNDEBUG -DNVALGRIND -DDYNAMIC_ANNOTATIONS_ENABLED=0 -DEXPAT_RELATIVE_PATH -DHAVE_SCTP -DWEBRTC_POSIX -DWEBRTC_MAC -I../.. -Igen -fno-strict-aliasing -fstack-protector -Wno-builtin-macro-redefined -D__DATE__= -D__TIME__= -D__TIMESTAMP__= -arch x86_64 -Wall -Wpartial-availability -Wno-unused-local-typedefs -Wno-maybe-uninitialized -Wno-missing-field-initializers -Wno-unused-parameter -O2 -gdwarf-2 -isysroot /home/debian/build/MacOSX10.7.sdk -mmacosx-version-min=10.9 -target x86_64-apple-darwin10 -mlinker-version=136 -B /home/debian/build/cctools/bin -fvisibility=hidden -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -Wno-strict-overflow -fvisibility-inlines-hidden -std=c++11 -stdlib=libc++ -Wno-narrowing -fno-rtti -fno-exceptions -Wnon-virtual-dtor -Woverloaded-virtual -c ../../webrtc/base/sequenced_task_checker_impl.cc -o obj/webrtc/base/rtc_task_queue/sequenced_task_checker_impl.o
warning: unknown warning option '-Wno-maybe-uninitialized'; did you mean '-Wno-uninitialized'? [-Wunknown-warning-option]
../../webrtc/base/sequenced_task_checker_impl.cc:34:46: error: use of undeclared identifier 'DISPATCH_CURRENT_QUEUE_LABEL'
    current_queue = dispatch_queue_get_label(DISPATCH_CURRENT_QUEUE_LABEL);
                                             ^
---
 rtc_base/sequenced_task_checker_impl.cc | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/rtc_base/sequenced_task_checker_impl.cc b/rtc_base/sequenced_task_checker_impl.cc
index d7f46ead7..edf0e6b61 100644
--- a/rtc_base/sequenced_task_checker_impl.cc
+++ b/rtc_base/sequenced_task_checker_impl.cc
@@ -30,8 +30,9 @@ bool SequencedTaskCheckerImpl::CalledSequentially() const {
 #if defined(WEBRTC_MAC)
   // If we're not running on a TaskQueue, use the system dispatch queue
   // label as an identifier.
-  if (current_queue == nullptr)
-    current_queue = dispatch_queue_get_label(DISPATCH_CURRENT_QUEUE_LABEL);
+  // Disable this because dispatch_queue_get_label requires SDK 10.9+.
+  // if (current_queue == nullptr)
+  //   current_queue = dispatch_queue_get_label(DISPATCH_CURRENT_QUEUE_LABEL);
 #endif
   CritScope scoped_lock(&lock_);
   if (!attached_) {  // true if previously detached.
-- 
2.11.0


From ab2daaecee725d093a4790502bf5966e50058c0a Mon Sep 17 00:00:00 2001
From: David Fifield <david@bamsoftware.com>
Date: Sat, 24 Mar 2018 19:36:41 -0700
Subject: [PATCH 5/10] Include <sys/socket.h> in macifaddrs_converter.cc.

Without this, when built against MacOSX10.7.sdk, there are errors:

In file included from ../../webrtc/base/macifaddrs_converter.cc:13:
/home/debian/build/MacOSX10.7.sdk/usr/include/net/if.h:300:19: error: field has incomplete type 'struct sockaddr'
                struct  sockaddr ifru_addr;

Related references:
https://trac.macports.org/ticket/49012
https://trac.macports.org/browser/trunk/dports/gnome/gstreamer1/files/patch-struct-sockadr.diff?rev=140712
---
 rtc_base/macifaddrs_converter.cc | 1 +
 1 file changed, 1 insertion(+)

diff --git a/rtc_base/macifaddrs_converter.cc b/rtc_base/macifaddrs_converter.cc
index 254be9b16..1fb1b70ae 100644
--- a/rtc_base/macifaddrs_converter.cc
+++ b/rtc_base/macifaddrs_converter.cc
@@ -10,6 +10,7 @@
 
 #include <memory>
 
+#include <sys/socket.h>
 #include <net/if.h>
 #include <sys/ioctl.h>
 #include <unistd.h>
-- 
2.11.0


From cfd2451eb951433a0354479a1699af43d970e92e Mon Sep 17 00:00:00 2001
From: David Fifield <david@bamsoftware.com>
Date: Sat, 24 Mar 2018 19:40:46 -0700
Subject: [PATCH 6/10] Provide definitions of NS_ENUM and NS_OPTIONS.

---
 sdk/objc/Framework/Headers/WebRTC/RTCMacros.h | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/sdk/objc/Framework/Headers/WebRTC/RTCMacros.h b/sdk/objc/Framework/Headers/WebRTC/RTCMacros.h
index 08cb93829..94f6f276e 100644
--- a/sdk/objc/Framework/Headers/WebRTC/RTCMacros.h
+++ b/sdk/objc/Framework/Headers/WebRTC/RTCMacros.h
@@ -25,4 +25,17 @@
 #define RTC_FWD_DECL_OBJC_CLASS(classname) typedef struct objc_object classname
 #endif
 
+// http://iamthewalr.us/blog/2012/11/ns_enum-and-ns_options/
+#if (__cplusplus && __cplusplus >= 201103L && (__has_extension(cxx_strong_enums) || __has_feature(objc_fixed_enum))) || (!__cplusplus && __has_feature(objc_fixed_enum))
+#define NS_ENUM(_type, _name) enum _name : _type _name; enum _name : _type
+#if (__cplusplus)
+#define NS_OPTIONS(_type, _name) _type _name; enum : _type
+#else
+#define NS_OPTIONS(_type, _name) enum _name : _type _name; enum _name : _type
+#endif
+#else
+#define NS_ENUM(_type, _name) _type _name; enum
+#define NS_OPTIONS(_type, _name) _type _name; enum
+#endif
+
 #endif  // SDK_OBJC_FRAMEWORK_HEADERS_WEBRTC_RTCMACROS_H_
-- 
2.11.0


From 6337f99129e483970ebc8a0352d4f7339e30c8f5 Mon Sep 17 00:00:00 2001
From: David Fifield <david@bamsoftware.com>
Date: Sat, 24 Mar 2018 19:41:56 -0700
Subject: [PATCH 7/10] Replace firstObject with objectAtIndex:0.

firstObject doesn't exist in our version of the SDK.

The two method calls are not exactly the same; on an empty array,
firstObject returns nil while objectAtIndex:0 raises an exception. Let's
hope that doesn't matter.
---
 modules/video_capture/objc/rtc_video_capture_objc.mm | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/modules/video_capture/objc/rtc_video_capture_objc.mm b/modules/video_capture/objc/rtc_video_capture_objc.mm
index bea9bb79f..6ef147f86 100644
--- a/modules/video_capture/objc/rtc_video_capture_objc.mm
+++ b/modules/video_capture/objc/rtc_video_capture_objc.mm
@@ -166,7 +166,7 @@ using namespace webrtc::videocapturemodule;
 }
 
 - (AVCaptureVideoDataOutput*)currentOutput {
-  return [[_captureSession outputs] firstObject];
+  return [[_captureSession outputs] objectAtIndex:0];
 }
 
 - (void)startCaptureInBackgroundWithOutput:(AVCaptureVideoDataOutput*)currentOutput {
-- 
2.11.0


From 167da77f002e2ae04f6f7da6a22a8dab73c10765 Mon Sep 17 00:00:00 2001
From: David Fifield <david@bamsoftware.com>
Date: Sat, 24 Mar 2018 19:42:53 -0700
Subject: [PATCH 8/10] Disable the desktop_capture module.

It's causing an error related to CoreGraphics.h and hopefully we don't
need it.
---
 modules/BUILD.gn | 1 -
 1 file changed, 1 deletion(-)

diff --git a/modules/BUILD.gn b/modules/BUILD.gn
index 465f32d3c..578cdbd57 100644
--- a/modules/BUILD.gn
+++ b/modules/BUILD.gn
@@ -17,7 +17,6 @@ group("modules") {
     "audio_processing",
     "bitrate_controller",
     "congestion_controller",
-    "desktop_capture",
     "media_file",
     "pacing",
     "remote_bitrate_estimator",
-- 
2.11.0

From 6038e4d77f99d3694230da272c31fd1e09049b00 Mon Sep 17 00:00:00 2001
From: David Fifield <david@bamsoftware.com>
Date: Sat, 24 Mar 2018 22:21:16 -0700
Subject: [PATCH 9/10] Define use_system_xcode even when host_os != "mac".

"$GN" gen out/Release --args="$GN_ARGS"
ERROR at //build/config/mac/mac_sdk.gni:36:6: Undefined identifier
if (!use_system_xcode) {
     ^---------------
See //build/config/sysroot.gni:74:3: whence it was imported.
  import("//build/config/mac/mac_sdk.gni")
  ^--------------------------------------
See //build/config/linux/pkg_config.gni:5:1: whence it was imported.
import("//build/config/sysroot.gni")
^----------------------------------
See //BUILD.gn:9:1: whence it was imported.
import("//build/config/linux/pkg_config.gni")
^-------------------------------------------
---
 build_overrides/build.gni | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/build_overrides/build.gni b/build_overrides/build.gni
index 81cb3e73a..eba4d5879 100644
--- a/build_overrides/build.gni
+++ b/build_overrides/build.gni
@@ -45,4 +45,6 @@ if (host_os == "mac") {
          "Do not allow building targets with the default" +
              "hermetic toolchain if the minimum OS version is not met.")
   use_system_xcode = _result == 0
+} else {
+  use_system_xcode = false
 }
-- 
2.11.0

From bc3b886a6e062f82a1500f722048c4b6d7ac4871 Mon Sep 17 00:00:00 2001
From: David Fifield <david@bamsoftware.com>
Date: Sat, 24 Mar 2018 22:39:44 -0700
Subject: [PATCH 10/10] Remove -instcombine-lower-dbg-declare=0.

Can't find what release of Clang/LLVM it was introduced in.
https://reviews.llvm.org/rL313108 dated 2017-09-12
---
 config/compiler/BUILD.gn | 12 ------------
 1 file changed, 12 deletions(-)

diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index a6ba4ea6..cd9c3989 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -422,18 +422,6 @@ config("compiler") {
     cflags += [ "-fcolor-diagnostics" ]
   }
 
-  # TODO(hans): Remove this once Clang generates better optimized debug info by
-  # default. https://crbug.com/765793
-  if (is_clang && !is_nacl && current_toolchain == host_toolchain &&
-      target_os != "chromeos") {
-    cflags += [
-      "-Xclang",
-      "-mllvm",
-      "-Xclang",
-      "-instcombine-lower-dbg-declare=0",
-    ]
-  }
-
   # Print absolute paths in diagnostics. There is no precedent for doing this
   # on Linux/Mac (GCC doesn't support it), but MSVC does this with /FC and
   # Windows developers rely on it (crbug.com/636109) so only do this on Windows.
-- 
2.11.0

